---
- name: Create a tenant using Ansible
  hosts: apic
  gather_facts: false
  tasks:
    - name: Create Tenant
      cisco.aci.aci_tenant:
        tenant: "{{ tenant_info.name }}"
        state:  # <TODO> Use a variable to set the tenant state
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs:  # <TODO> Use a variable to specify TLS validation

    - name: Create VRF
      cisco.aci.aci_vrf:
        tenant:  # <TODO> Use a variable to set the tenant name
        vrf:  # <TODO> Use a loop variable to set the VRF name
        state:  # <TODO> Use a variable to set the VRF state
        host:  # <TODO> Use a variable to set the API host
        username:  # <TODO> Use a variable to set the API username
        password:  # <TODO> Use a variable to set the API password
        validate_certs:  # <TODO> Use a variable to specify TLS validation
      loop: "{{ tenant_info.vrfs }}"

    - name: Create Bridge Domain
      cisco.aci.aci_bd:
        tenant: "{{ tenant_info.name }}"
        vrf: "{{ item.vrf }}"
        bd:  # <TODO> Use a loop variable to set the bridge domain name
        state: "{{ global_object_state }}"
        host: "{{ ansible_host }}"
        username:  # <TODO> Use a variable to set the API username
        password:  # <TODO> Use a variable to set the API password
        validate_certs: "{{ apic_tls_verify }}"
      loop:  # <TODO> Loop over tenant bridge domains

    - name: Create subnets
      cisco.aci.aci_bd_subnet:
        tenant: "{{ tenant_info.name }}"
        bd:  # <TODO> Set bridge domain name using a loop variable
        gateway:  # <TODO> Set IP gateway using a loop variable and the ipaddr filter
        mask: "{{ item.1.ip | ansible.utils.ipaddr('') }}"  # <TODO> Set mask using prefix parameter
        state: "{{ global_object_state }}"
        host: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs: "{{ apic_tls_verify }}"
      loop: "{{ tenant_info.bridge_domains | subelements('subnets') }}"
