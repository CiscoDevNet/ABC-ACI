---
- name: Create a tenant using Ansible
  hosts: apic
  gather_facts: false
  tasks:
    - name: Create Tenant
      cisco.aci.aci_tenant:
        tenant: "{{ tenant_info.name }}"
        state:  # <TODO> Use a variable to set the tenant state
        host: "{{ ansible_host }}"
        username: "{{ vault_ansible_user }}"
        password: "{{ vault_ansible_password }}"
        validate_certs:  # <TODO> Use a variable to specify TLS validation

    - name: Create VRF
      cisco.aci.aci_vrf:
        tenant: "{{ tenant_info.name }}"
        vrf:  # <TODO> Use a variable to set the VRF name
        state: "{{ global_object_state }}"
        host: "{{ ansible_host }}"
        username: "{{ vault_ansible_user }}"
        password: "{{ vault_ansible_password }}"
        validate_certs: "{{ apic_tls_verify }}"

    - name: Create Bridge Domain
      cisco.aci.aci_bd:
        tenant:  # <TODO> Use a variable to set the tenant name
        vrf: "{{ tenant_info.vrf_name }}"
        bd: "{{ tenant_info.bd_name }}"
        state:  # <TODO> Use a variable to set the bridge domain state
        host: "{{ ansible_host }}"
        username: "{{ vault_ansible_user }}"
        password: "{{ vault_ansible_password }}"
        validate_certs: "{{ apic_tls_verify }}"

    - name: Create subnets
      cisco.aci.aci_bd_subnet:
        tenant:  # <TODO> Use a variable to set the tenant name
        bd:  # <TODO> Use a variable to set the bridge domain name
        gateway: "{{ item | ansible.utils.ipaddr('') }}"  # <TODO> Use the ip parameter for subnet IP address
        mask: "{{ item | ansible.utils.ipaddr('') }}"  # <TODO> Use the prefix parameter for subnet mask
        state:  # <TODO> Use a variable to set the subnet state
        host: "{{ ansible_host }}"
        username: "{{ vault_ansible_user }}"
        password: "{{ vault_ansible_password }}"
        validate_certs: false
      loop: "{{ tenant_info.subnets }}"
